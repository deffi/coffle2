require 'socket'
require 'etc'

require 'coffle/template_methods_ssh'

module Coffle
	module TemplateMethods
		def automessage(comment="# ", width=80)
			time=Time.now.strftime("%Y-%m-%d %H:%M:%S %z")

			message=<<-end
This file was autogenerated from #{@entry.source} by #{username}@#{hostname} on #{time}. You should not make any changes here, as they may be overwritten when the file is regenerated.

To regenerate this file, execute the following command:
    #{$0} build
in the following directory:
    #{Dir.getwd}
end
			message.wrap(width-comment.length).prefix_lines(comment)
		end

		def username
			Etc.getlogin
		end

		def hostname
			Socket.gethostname
		end

		def matches(array, string)
			array.each do |element|
				if element.is_a? String
					return true if element==string
				elsif element.is_a? Regexp
					return true if element.match(string)
				end
			end

			false
		end

		def host(*hosts)
			yield if matches(hosts, hostname)
		end

		def not_host(*hosts)
			yield unless matches(hosts, hostname)
		end

		def skip!
			@skipped=true
		end

		def skipped?
			@skipped
		end

		# Use from helper method:
		#   text=capture { yield }
		#   output process(text)
		#
		# Or from erb:
		#   <% output process(capture { %>
		#     ...
		#   <% }) %>
		def capture
			saved_output=@_output
			@_output=""

			yield
			captured=@_output

			@_output=saved_output

			captured
		end

		def output(string)
			@_output+=string
		end

		def include(mod)
			# Ugly hack because in the class<<self block, we cannot access
			# local variables
			@@module_to_include=mod

			class <<self
				include @@module_to_include
			end
		end
	end
end


